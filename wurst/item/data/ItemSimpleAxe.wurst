package ItemSimpleAxe

import Stack
import KItem
import StackType
import KItemType
import HeroData

init
    Initializer.register(InitializerNames.ITEMS) -> 
        ItemSimpleAxe.setup()

public class ItemSimpleAxe extends KItem
    static KItemType TYPE
    static constant DAMAGE = 0
    static constant FAMILY = 1

    protected static function setup()
        TYPE = new KItemType("Simple Axe",  Icons.bTNOrcMeleeUpOne, 1, KItemClass.WEAPON)
        TYPE.onCreate() data ->
            return new ItemSimpleAxe(TYPE, data)
        TYPE.onTooltipCreate() data ->
            return createTooltipLines(data)
        TYPE.onCreateData() -> 
            return KItemData.create(HeroDataChange.createForGold(100))
                ..setIntData(DAMAGE, GetRandomInt(5, 8))
                ..setIntData(FAMILY, GetRandomInt(0, 2))

                
    private static function createTooltipLines(KItemData data) returns LinkedList<string>
        return new LinkedList<string>
        ..add(KStringUtils.signedStat("Damage of " + KStringUtils.secondary(getFamily(data).name) + " Stacks", 
            data.getIntData(DAMAGE)))

    private static function getFamily(KItemData data) returns Family
        let i = data.getIntData(FAMILY)
        if i == 0
            return Family.TROLL
        else if i == 1
            return Family.SKELTON
        return Family.GNOLL

    private Family family

    construct(KItemType itemType, KItemData data)
        super(itemType, data)
        family = getFamily(data)

    override function onStackUpdate(ArmyStack armyStack, boolean add)
        if not armyStack.typ.isFamily(family)
            return
        armyStack.stats.baseDamage.modify(data.getIntData(DAMAGE), add)
   
    override function createTooltipLines() returns LinkedList<string>
        return createTooltipLines(this.data)
        
