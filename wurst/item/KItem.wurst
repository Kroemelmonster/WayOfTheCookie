package KItem

import initlater Hero
import initlater KItemType
import Tooltip
import Stack

public abstract class KItem
    protected KItemType typ
    protected KItemData data

    construct(KItemType itemType, KItemData data)
        this.typ = itemType
        this.data = data

    function onStackUpdate(ArmyStack _armyStack, boolean _equiped)

    function onEquip(Hero _h, boolean _equiped)

    function getIcon() returns string
        return typ.getIcon()

    function getClass() returns KItemClass
        return typ.getClass()

    function toString() returns string
        return "Item [" + typ.getName() + "]"

    abstract function createTooltipLines() returns LinkedList<string>

    function createTooltipCost(Hero h) returns Tooltip
        let tt = Tooltip.create(typ.getName())
        ..addLines(createTooltipLines())

        data.getCost().setupTooltipCost(tt, h)
        return tt

    function createTooltip() returns Tooltip
        let tt = Tooltip.create(typ.getName())
        ..addLine(KStringUtils.data("Level", typ.getLevel()))
        ..addLine(typ.getClass().toString())
        ..addLines(createTooltipLines())

        data.getCost().setupTooltipCost(tt)
        return tt