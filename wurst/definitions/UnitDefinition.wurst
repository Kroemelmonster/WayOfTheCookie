package UnitDefinition

import UnitIds
import ChannelAbilityPreset

public class UnitTypesIds
    static constant ABOMINATION = compiletime(UNIT_ID_GEN.next())
    static constant ARMY_ABOMINATION = compiletime(UNIT_ID_GEN.next())
    static constant FOOTMAN = compiletime(UNIT_ID_GEN.next())
    static constant ARMY_FOOTMAN = compiletime(UNIT_ID_GEN.next())
    static constant SKELTAL_ORC = compiletime(UNIT_ID_GEN.next())
    static constant ARMY_SKELTAL_ORC = compiletime(UNIT_ID_GEN.next())
    static constant NECROMANCER = compiletime(UNIT_ID_GEN.next())
    static constant ARMY_NECROMANCER = compiletime(UNIT_ID_GEN.next())
    static constant SKELETON_LESSER = compiletime(UNIT_ID_GEN.next())
    static constant ARMY_SKELETON_LESSER = compiletime(UNIT_ID_GEN.next())

    static constant SASQUATCH_ORACLE = compiletime(UNIT_ID_GEN.next())
    static constant ARMY_SASQUATCH_ORACLE = compiletime(UNIT_ID_GEN.next())
    static constant ANCIENT_SASQUATCH = compiletime(UNIT_ID_GEN.next())
    static constant ARMY_ANCIENT_SASQUATCH = compiletime(UNIT_ID_GEN.next())

    
    static constant GNOLL = compiletime(UNIT_ID_GEN.next())
    static constant ARMY_GNOLL = compiletime(UNIT_ID_GEN.next())
    static constant GNOLL_POACHER = compiletime(UNIT_ID_GEN.next())
    static constant ARMY_GNOLL_POACHER = compiletime(UNIT_ID_GEN.next())
    static constant GNOLL_WARDEN = compiletime(UNIT_ID_GEN.next())
    static constant ARMY_GNOLL_WARDEN = compiletime(UNIT_ID_GEN.next())


    static constant WIDOW_SPIDER = compiletime(UNIT_ID_GEN.next())
    static constant ARMY_WIDOW_SPIDER = compiletime(UNIT_ID_GEN.next())

    static constant FOREST_TROLL = compiletime(UNIT_ID_GEN.next())
    static constant ARMY_FOREST_TROLL = compiletime(UNIT_ID_GEN.next())
    static constant FOREST_TROLL_BERSERKER = compiletime(UNIT_ID_GEN.next())
    static constant ARMY_FOREST_TROLL_BERSERKER = compiletime(UNIT_ID_GEN.next())
    static constant FOREST_TROLL_HIGH_PRIEST = compiletime(UNIT_ID_GEN.next())
    static constant ARMY_FOREST_TROLL_HIGH_PRIEST = compiletime(UNIT_ID_GEN.next())

    static constant HERO_FAR_SEER = compiletime(UNIT_ID_GEN.next())


public class AbilityTypesIds
    static constant TARGET_SPELL = compiletime(ABIL_ID_GEN.next())
    static string TARGET_SPELL_ORDER = "absorb"
    static constant SELFCAST_SPELL = compiletime(ABIL_ID_GEN.next())
    static string SELFCAST_SPELL_ORDER = "acidbomb"
    static constant TARGET_UNIT_SPELL = compiletime(ABIL_ID_GEN.next())
    static string TARGET_UNIT_SPELL_ORDER = "acolyteharvest"
    static constant TARGET_UNIT_LIGHTNING_SPELL = compiletime(ABIL_ID_GEN.next())
    static string TARGET_UNIT_LIGHTNING_SPELL_ORDER = "acolyteharvest"

@inline
function createBoardUnit(int basisId, int id, string name, real scale, int speed)
    new UnitDefinition(id, basisId)
        ..setUnitClassification("Peon")
        ..setSightRadiusDay(0)
        ..setSightRadiusNight(0)
        ..setPointValue(0)
        ..setHitPointsMaximumBase(1000)
        ..setHitPointsRegenerationRate(0.0)
        ..setManaRegeneration(0.0)
        ..setManaMaximum(0)
        ..setManaInitialAmount(0)
        ..setCanFlee(false)
        ..setAttacksEnabled(1)
        ..setNormalAbilities(AbilityTypesIds.SELFCAST_SPELL.toRawCode() + "," + AbilityTypesIds.TARGET_SPELL.toRawCode())
        ..setAttack1DamageBase(-1)
        ..setAttack1DamageNumberofDice(-1)
        ..setAttack1DamageSidesperDie(-1)
        ..setAttack1Range(9998)
        ..setAcquisitionRange(9998)
        ..setCollisionSize(0)
        ..setScalingValue(scale)
        ..setSpeedBase(speed)
    // So the unit does not attack twice..
        ..setAttack1CooldownTime(2.2)
        ..setName(name)
@inline
function createArmyUnit(int basisId, int id, string name, real scale, int speed)
    new UnitDefinition(id, basisId)
        ..setPointValue(0)
        ..setHitPointsMaximumBase(1000)
        ..setHitPointsRegenerationRate(0.0)
        ..setManaRegeneration(0.0)
        ..setManaMaximum(0)
        ..setManaInitialAmount(0)
        ..setCanFlee(false)
        ..setAttacksEnabled(1)
        ..setNormalAbilities("")
        ..setAttack1DamageBase(-1)
        ..setAttack1DamageNumberofDice(-1)
        ..setAttack1DamageSidesperDie(-1)
        ..setAttack1Range(128)
        ..setAttack1RangeMotionBuffer(100)
        ..setAttack1ProjectileSpeed(10000)
        ..setAcquisitionRange(800)
        ..setCollisionSize(32)
        ..setScalingValue(scale)
        ..setSpeedBase(speed)
        ..setName(name)
@inline
function createHero(int basisId, int id, string name, real scale, int speed)
    new HeroDefinition(id, basisId)
        ..setUnitClassification("Peon")
        ..setPointValue(0)
        ..setHitPointsMaximumBase(1000)
        ..setHitPointsRegenerationRate(0.0)
        ..setManaRegeneration(0.0)
        ..setManaMaximum(0)
        ..setManaInitialAmount(0)
        ..setCanFlee(false)
        ..setNormalAbilities(AbilityTypesIds.TARGET_UNIT_SPELL.toRawCode())
        ..setAttacksEnabled(1)
        ..setAttack1DamageBase(-1)
        ..setAttack1DamageNumberofDice(-1)
        ..setAttack1DamageSidesperDie(-1)
        ..setAttack1ProjectileSpeed(1000)
        ..setAttack1Range(128)
        ..setAttack1RangeMotionBuffer(100)
        ..setAcquisitionRange(0)
        ..setAnimationCastBackswing(0.0)
        ..setAnimationCastPoint(0.0)
        ..setScalingValue(scale)
        ..setSpeedBase(speed)
        ..setName(name)

@inline
function createAbility(int id, Targettype ttype)
    new ChannelAbilityPreset(id, 1, true)
        ..setName("Dummy abc")
        ..presetButtonPosNormal(0, 0)
        ..presetCastRange(lvl -> 9999)
        ..setHeroAbility(false)
        ..presetManaCost(lvl -> 0)
        ..presetCooldown(lvl -> 0)
        ..presetTargetTypes(ttype)

@inline 
function createUnit(int id, int boardId, int armyId, string name, real scale, int speed)
    createBoardUnit(id, boardId, name, scale, speed)
    createArmyUnit(id, armyId, name, scale, speed)

@compiletime
function setup()
    createAbility(AbilityTypesIds.TARGET_SPELL, Targettype.POINT)
    createAbility(AbilityTypesIds.SELFCAST_SPELL, Targettype.NONE)

    new ChannelAbilityPreset(AbilityTypesIds.TARGET_UNIT_SPELL, 1, true)
        ..setName("Target NPC")
        ..setCastingTime(0, 0)
        ..setAnimationNames("stand")
        ..presetButtonPosNormal(0, 0)
        ..presetCastRange(lvl -> 128)
        ..setHeroAbility(false)
        ..presetManaCost(lvl -> 0)
        ..presetCooldown(lvl -> 0)
        ..presetTargetTypes(Targettype.UNIT)
        ..setTargetsAllowed(0, "invulnerable")

    createUnit(UnitIds.abomination, UnitTypesIds.ABOMINATION, UnitTypesIds.ARMY_ABOMINATION, "Abo", 0.7, 200)
    createUnit(UnitIds.footman, UnitTypesIds.FOOTMAN, UnitTypesIds.ARMY_FOOTMAN, "Footman", 0.7, 220)
    createUnit(UnitIds.skeletalorc, UnitTypesIds.SKELTAL_ORC, UnitTypesIds.ARMY_SKELTAL_ORC, "Skeletal Orc", 0.8, 230)
    createUnit(UnitIds.necromancer, UnitTypesIds.NECROMANCER, UnitTypesIds.ARMY_NECROMANCER, "Necromancer", 0.7, 200)
    createUnit(UnitIds.darkminion1, UnitTypesIds.SKELETON_LESSER, UnitTypesIds.ARMY_SKELETON_LESSER, "Lesser Skeleton", 0.6, 220)
    
    createUnit(UnitIds.sasquatchoracle, UnitTypesIds.SASQUATCH_ORACLE, UnitTypesIds.ARMY_SASQUATCH_ORACLE, "Sasquatch Oracle", 0.7, 360)
    createUnit(UnitIds.ancientsasquatch, UnitTypesIds.ANCIENT_SASQUATCH, UnitTypesIds.ARMY_ANCIENT_SASQUATCH, "Ancient Sasquatch", 0.7, 360)

    createUnit(UnitIds.gnoll1, UnitTypesIds.GNOLL, UnitTypesIds.ARMY_GNOLL, "Gnoll", 0.6, 220)
    createUnit(UnitIds.gnollpoacher, UnitTypesIds.GNOLL_POACHER, UnitTypesIds.ARMY_GNOLL_POACHER, "Gnoll Poacher", 0.6, 220)
    createUnit(UnitIds.gnoll3, UnitTypesIds.GNOLL_WARDEN, UnitTypesIds.ARMY_GNOLL_WARDEN, "Gnoll Warden", 0.8, 220)

    createUnit(UnitIds.spiderblack, UnitTypesIds.WIDOW_SPIDER, UnitTypesIds.ARMY_WIDOW_SPIDER, "Widow Spider", 0.9, 220)

    createUnit(UnitIds.foresttroll, UnitTypesIds.FOREST_TROLL, UnitTypesIds.ARMY_FOREST_TROLL, "Forest Troll", 0.6, 240)
    createUnit(UnitIds.foresttrollberserker, UnitTypesIds.FOREST_TROLL_BERSERKER, UnitTypesIds.ARMY_FOREST_TROLL_BERSERKER, "Forest Troll Berserker", 0.8, 240)
    createUnit(UnitIds.foresttrollhighpriest, UnitTypesIds.FOREST_TROLL_HIGH_PRIEST, UnitTypesIds.ARMY_FOREST_TROLL_HIGH_PRIEST, "Forest Troll High Priest", 0.8, 240)

    createHero(UnitIds.drekthar, UnitTypesIds.HERO_FAR_SEER, "Farseer", 1.0, 360)
    
    