package Init

import LinkedList

import StackTypesDefinition
import ClosureTimers
import Mouse3DPositionSystem
import UIMain

import PlayerData
import Action
import StatusType
import World
import Scheduler
import KUtil
import KItem
import SkillTree
import UITooltip
import MainController
import HeroTypesDefinition

let globalSetups = new LinkedList<SetupListener>()

init
	UIMain.removeBlizzardUI()

	globalSetups.add() ->
		setupSystems()
	for int i = 0 to UIMain.MAX_PARTS
		globalSetups.add() ->
			UIMain.load(i)
	StackTypesDefinition.setup(globalSetups)
	globalSetups.add() ->
		defineObjects()
	HeroTypesDefinition.setup(globalSetups)
	globalSetups.add() ->
		createTestBoard()
	globalSetups.add() ->
		createWorld()
	globalSetups.add() ->
		start()

	doAfter(0.1) ->
		setupNext(globalSetups.iterator())

function setupNext(LLIterator<SetupListener> itr)
	if itr.hasNext()
		nullTimer() ->
			itr.next().continue()
			setupNext(itr)
	else
		destroy itr
		destroy globalSetups
	

function createWorld()
	//Log.info("Build World")
	World.generateArmies()
	World.generateNPCs()

function createTestBoard()
	//Log.info("Clear Battlefields")
	World.generateBoards()
	

function setupSystems()
	//Log.info("Setup Systems")
	Player.setup()
	Mouse3DPositionSystem.setup()
	BlzEnableSelections(true, false)
	Tooltip.setup()

function start()
	//Log.info("Start")
	World.generateHeroes()
	MainController.setup()
	Scheduler.setup()

function defineObjects()
	//Log.info("Flesh out some Units")
	StatusTypeSet.setup()
	Action.setup()
	KItemTypeSet.setup()