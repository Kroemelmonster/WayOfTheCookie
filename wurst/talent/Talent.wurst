package Talent

import initlater BoardStack
import initlater StackType
import DefaultTalent
import SummonLesserSkeletonTalent
import WarcryTalent
import CounterAttackTalent
import UITooltip
import TestAuraTalent

interface GenerateListener
    function onStackCreation(BoardStack stack)

interface StackTypeCreationListener
    function onCreation(StackType stackType)

public class TalentSet
    static Talent DEFAULT
    static Talent SUMMON_LESSER_SKELETON
    static Talent WARCRY
    static Talent COUNTER_ATTACK
    static Talent TEST_AURA

    static function setup()
        DefaultTalent.setup()
        SummonLesserSkeletonTalent.setup()
        WarcryTalent.setup()
        CounterAttackTalent.setup()
        TEST_AURA = TestAuraTalent.setup()


public abstract class Talent
    protected string name
    protected string icon = null
    private GenerateListener listener
    private StackTypeCreationListener stackTypeCreationListener

    construct(string name, string icon)
        this.name = name
        this.icon = icon

    construct()

    function addGenerateListener(GenerateListener listener)
        this.listener = listener

    function addStackTypCreationListener(StackTypeCreationListener listener)
        this.stackTypeCreationListener = listener

    function onStackTypeCreation(StackType stackType)
        if stackTypeCreationListener != null
            stackTypeCreationListener.onCreation(stackType)
        
    function onStackCreation(BoardStack stack)
        listener.onStackCreation(stack)

    function isHidden() returns boolean
        return icon == null

    function getIcon() returns string
        return icon
    
    function createTooltip(StackType _sType) returns Tooltip
        return null