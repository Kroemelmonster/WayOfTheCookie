package PassiveTalentType

import PassiveType
import Tooltip
import BoardEntity
import TalentType
import PassiveTalent
import StackPassiveType
import Data
import Damage
import StackType

public class PassiveTalentType extends TalentType implements HasData
    protected StackPassiveType passiveType
    protected StackPassiveData data
    
    construct(StackPassiveType passiveType, StackPassiveData data)
        super(passiveType)
        this.passiveType = passiveType
        this.data = data
        
        onCreate() entity ->
            return new PassiveTalent(this, passiveType, data, entity)
        onCreateTooltip() (HasEntityStats stats) -> 
            return createBasicTooltip()
            ..addLines(passiveType.createTooltipLines(data, stats))

    override function setIntData(int where, int value)
        data.setIntData(where, value)

    override function getIntData(int where) returns int
        return data.getIntData(where)

    override function setBoolData(int where, boolean value)
        data.setBoolData(where, value)

    override function getBoolData(int where) returns boolean
        return getBoolData(where)

    override function setRealData(int where, real value)
        data.setRealData(where, value)

    override function getRealData(int where) returns real
        return data.getRealData(where)