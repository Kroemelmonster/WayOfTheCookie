package StatusController

import StatusType

import initlater Status
import initlater BoardStack
import BoardEntity

public class StatusController 

    static function has(StatusType statusType, BoardEntity entity) returns boolean
        return get(statusType, entity) != null

    static function get(StatusType statusType, BoardEntity entity) returns Status
        Status result = null
        let itr = entity.statusIterator()
        while itr.hasNext() and result == null
            let b = itr.next()
            if b.getType() == statusType
                result = b
        destroy itr
        return result

    static function apply(StatusType statusType, BoardEntity entity, StatusData data) returns Status
        let oldStatus = get(statusType, entity)
        if oldStatus != null
            oldStatus.refresh(data)
            return oldStatus
        return statusType.applyNewStatusTo(entity, data)

    static function remove(StatusType statusType, BoardEntity entity)
        let b = get(statusType, entity)
        if b != null
            b.kill()

    static function hideAll(BoardStack stack)
        let itr = stack.statusIterator()
        while itr.hasNext()
            itr.next().hide()

        destroy itr
