package AnimationCast

import Animation
import UnitDefinition

import initlater BoardEntity
import initlater Cell

public class AnimationCast extends Animation
    static function withoutTarget(BoardEntity entity, AnimationListener listener)
        new AnimationCast(entity, null, listener)

    static function atCell(BoardEntity entity, Cell target, AnimationListener listener)
        new AnimationCast(entity, target, listener)

    private construct(BoardEntity entity, Cell target, AnimationListener listener)
        super(entity.getBoard(), listener)
        if target == null
            entity.issueImmediateOrder(AbilityTypesIds.SELFCAST_SPELL_ORDER)
        else
            entity.issuePointOrder(AbilityTypesIds.TARGET_SPELL_ORDER, target)
        entity.doOnNextCast() ->
            finishAnimation(this)

  
        
    override function tick(real delta) returns boolean
        return false // this triggers individually
        
