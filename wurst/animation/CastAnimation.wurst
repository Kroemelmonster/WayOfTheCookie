package CastAnimation

import Animation
import UnitDefinition

import initlater BoardStack
import initlater Cell

public abstract class CastAnimation extends Animation
    protected boolean finished = false
    protected BoardStack stack
    protected Cell target

    construct(BoardStack stack, Cell target, AnimationListener listener)
        super(stack.getBoard(), listener)
        this.stack = stack
        this.target = target
        if target == null
            stack.issueImmediateOrder(AbilityTypesIds.SELFCAST_SPELL_ORDER)
        else
            stack.issuePointOrder(AbilityTypesIds.TARGET_SPELL_ORDER, target)
        stack.doOnNextCast() ->
            onCastExecute()
            finished = true

    abstract function onCastExecute()

    override function tick(real delta) returns boolean
        return finished
        
