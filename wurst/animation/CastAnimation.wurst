package CastAnimation

import Animation
import UnitDefinition

import initlater BoardStack
import initlater Cell

public class CastAnimation extends Animation
    private construct(BoardStack stack, Cell target, AnimationListener listener)
        super(stack.getBoard(), listener)
        if target == null
            stack.issueImmediateOrder(AbilityTypesIds.SELFCAST_SPELL_ORDER)
        else
            stack.issuePointOrder(AbilityTypesIds.TARGET_SPELL_ORDER, target)
        stack.doOnNextCast() ->
            finishAnimation(this)

    static function create(BoardStack stack, AnimationListener listener)
        new CastAnimation(stack, null, listener)

    static function create(BoardStack stack, Cell target, AnimationListener listener)
        new CastAnimation(stack, target, listener)
        
    override function tick(real delta) returns boolean
        return false // this triggers individually
        
