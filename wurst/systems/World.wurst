package World

import LinkedList

import PlayerData
import MainController

import initlater Board
import initlater HostileArmy
import initlater Hero
import initlater StackTypesDefinition
import initlater NPC
import ItemSteelHammer
import StackType
import PoisionousStingItem

public class World
    protected static LinkedList<Board> boards = new LinkedList<Board>
    protected static LinkedList<HostileArmy> armies = new LinkedList<HostileArmy>
    protected static LinkedList<Hero> heroes = new LinkedList<Hero>
    protected static LinkedList<NPC> npcs = new LinkedList<NPC>

    static function generateBoards()
        boards.add(new Board(gg_rct_BoardIsleOne, gg_rct_BoardIsleOneV))
        boards.add(new Board(gg_rct_BoardIsleTwo, gg_rct_BoardIsleTwoV))
        boards.add(new Board(gg_rct_BoardIsleThree, gg_rct_BoardIsleThreeV))

    static function generateNPCs()
        let shop = new NPCShop(gg_unit_n000_0002)
        StackTypes.list.forEach() (StackType t) ->
            shop.addStock(t, GetRandomInt(50, 100))
        npcs.add(shop)
        
    static function generateArmies()
        armies.add(new HostileArmy(gg_unit_n001_0003)
        ..addStackAtFree(StackTypes.ANCIENT_SASQUATCH, 1)
        ..addStackAtFree(StackTypes.SASQUATCH_ORACLE, 1)
        ..addStackAtFree(StackTypes.GNOLL_POACHER, GetRandomInt(10, 20))
        ..addStackAtFree(StackTypes.GNOLL_POACHER, GetRandomInt(10, 20))
        ..replaceChicken())

        armies.add(new HostileArmy(gg_unit_n001_0008)
        ..addStackAtFree(StackTypes.FOREST_TROLL_BERSERKER, GetRandomInt(4, 7))
        ..addStackAtFree(StackTypes.NECROMANCER, GetRandomInt(5, 10))
        ..addStackAtFree(StackTypes.FOREST_TROLL, GetRandomInt(15, 20))
        ..replaceChicken())

        armies.add(new HostileArmy(gg_unit_n001_0009)
        ..addStackAtFree(StackTypes.NECROMANCER, GetRandomInt(15, 20))
        ..addStackAtFree(StackTypes.NECROMANCER, GetRandomInt(15, 20))
        ..addStackAtFree(StackTypes.SKELETALORC, GetRandomInt(6, 10))
        ..replaceChicken())

        armies.add(new HostileArmy(gg_unit_n001_0010)
        ..addStackAtFree(StackTypes.GNOLL_WARDEN, GetRandomInt(5, 10))
        ..addStackAtFree(StackTypes.GNOLL_POACHER, GetRandomInt(50, 100))
        ..addStackAtFree(StackTypes.GNOLL, GetRandomInt(50, 100))
        ..replaceChicken())

        armies.add(new HostileArmy(gg_unit_n001_0011)
        ..addStackAtFree(StackTypes.GNOLL_POACHER, GetRandomInt(120, 200))
        ..addStackAtFree(StackTypes.GNOLL, GetRandomInt(120, 200))
        ..replaceChicken())

    static function getBoardToFightOn(HostileArmy _enemy) returns Board
        return boards.get(GetRandomInt(0, boards.size() - 1))
        
    static function generateHeroes()
        heroes.add(new Hero(playerData[0])
        ..addStackAtFree(StackTypes.FOREST_TROLL_HIGH_PRIEST, 3)
        //..addStackAtFree(StackTypes.FOREST_TROLL_BERSERKER, 2)
        ..setAttack(7)
        ..setDefence(3)
        ..setActiveItem(0, new ItemSteelHammer())
        ..setBackPackItem(0, new PoisionousStingItem())
        ..setBackPackItem(1, new PoisionousStingItem()))
 
    static function onHeroDamaged(Hero hero, unit u)
        let enemy = HostileArmy.getFromUnit(u)
        if enemy != null
            MainController.startFight(hero, enemy, getBoardToFightOn(enemy))

    static function onHostileArmyDamaged(HostileArmy enemy, unit u)
        let hero = Hero.getFromUnit(u)
        if hero != null
            MainController.startFight(hero, enemy, getBoardToFightOn(enemy))

    static function onHeroSmartOrder(Hero hero, unit u)
        let npc = NPC.getFromUnit(u)
        if npc != null
            hero.issueNPC(npc)

    static function onHeroSmartOrder(Hero hero)
        hero.stopInteract()

    static function onHeroInteractWithNPC(Hero hero, unit u)
        let npc = NPC.getFromUnit(u)
        if npc != null
            MainController.interact(hero, npc)