package Scheduler

import ClosureTimers
import TimerUtils

import UIMenuWorldConsole
import PlayerData

import initlater Board
import UIWindowSpellBook
import LinkedList
import BoardTrigger

class Scheduler
    private static timer realTime
    private static int gameTime
    private static LinkedList<SequenzPlayerListener> registeredListener = new LinkedList<SequenzPlayerListener>

    static private function tick()
        gameTime += 1
        realTime.start(.1, () -> tick())

    static function getCurrentTime() returns int
        return gameTime

    static function getTimeIn(real seconds) returns int
        return gameTime + (seconds * 10).floor()

    static function onTime(SequenzPlayerListener listener)
        registeredListener.add(listener)

    private static function doPeriodicallyInner(Player p, LLIterator<SequenzPlayerListener> listener)
        if not listener.hasNext()
            destroy listener
            return
        listener.next().onEvent(p)
        if listener.hasNext()
            nullTimer() ->
                doPeriodicallyInner(p, listener)

    static function setup()
        realTime = getTimer()
        realTime.start(.1, () -> tick())
        Player.forEachActive() p ->
            doPeriodically(ANIMATION_PERIOD) cb ->
                if p.playingBoard != null
                    p.playingBoard.tick(ANIMATION_PERIOD)

            doPeriodically(0.2) cb ->
                doPeriodicallyInner(p, registeredListener.iterator())
                
            doPeriodically(0.2) cb ->
                UIWindowSpellBook.update(p)

                
                
            
    