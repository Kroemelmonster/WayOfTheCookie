package StatusType

import Status
import WarcryBuff
import BoardStack
import UITooltip
import BleedingAilment
import PoisonAilment
import StunDebuff
import SlowDebuff
import HastedBuff
import PurgedDebuff

interface StatusCreateListener
    function create(BoardStack stack) returns Status

interface StatusTypeTooltipListener
    function getTooltip(StatusData data) returns Tooltip

public class StatusTypeSet
    static StatusType WARCRY
    static StatusType BLEEDING
    static StatusType POISON
    static StatusType STUNNED
    static StatusType SLOWED
    static StatusType PURGED
    static StatusType HASTED

    static function setup()
        WARCRY = WarcryBuff.setup()
        BLEEDING = BleedingAilment.setup()
        POISON = PoisonAilment.setup()
        STUNNED = StunDebuff.setup()
        SLOWED = SlowDebuff.setup()
        HASTED = HastedBuff.setup()
        PURGED = PurgedDebuff.setup()


public class StatusType
    protected string icon
    protected string name
    protected StatusCreateListener listener
    protected StatusTypeTooltipListener tooltipCreator

    construct(string icon, string name)
        this.icon = icon
        this.name = name

    function setCreationListener(StatusCreateListener listener)
        this.listener = listener

    function setTooltipListener(StatusTypeTooltipListener listener)
        this.tooltipCreator = listener

    @inline
    function createNew(BoardStack stack) returns Status
        return listener.create(stack)

    @inline
    function getIcon() returns string
        return icon
    
    @inline
    function getName() returns string
        return name

    @inline
    function getTooltip(StatusData data) returns Tooltip
        return tooltipCreator.getTooltip(data)

    @inline
    function toString() returns string
        return "StatusType '"+name+"'"
