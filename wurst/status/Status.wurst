package Status

import initlater BoardEntity
import initlater StatusType
import UITooltip

public class StatusData
    int duration
    int firstIntValue
    real firstRealValue

    construct(int duration, int firstIntValue, real firstRealValue)
        this.duration = duration
        this.firstIntValue = firstIntValue
        this.firstRealValue = firstRealValue

    static function create() returns StatusData
        return new StatusData(0,0,0)

    static function createI(int firstValue) returns StatusData
        return new StatusData(0, firstValue, 0)

    static function createDuration(int duration) returns StatusData
        return createDurationI(duration, 0)

    static function createDurationI(int duration, int firstValue) returns StatusData
        return new StatusData(duration, firstValue, 0)

    static function createDurationR(int duration, real firstValue) returns StatusData
        return new StatusData(duration, 0, firstValue)

public abstract class Status
    protected StatusType statusType
    protected BoardEntity entity

    construct(StatusType statusType, BoardEntity entity)
        this.statusType = statusType
        this.entity = entity

    function getType() returns StatusType
        return statusType

    function getIcon() returns string
        return statusType.getIcon()
    
    function update(StatusData data)
        updateInner(data)
        destroy data

    /** call this only ONCE when you want to purge a buff from a unit that is no longer alive 
        This will ONLY remove ANY visuals this buff might have it does not unregister any events

        But since you should only call this on a dead stack, it wont trigger anything anyway **/
    abstract function hide()

    abstract function updateInner(StatusData data)

    /** Always use this tooltip instantly with intend to destroy it **/
    abstract function createCurrentTooltip() returns Tooltip

    protected function kill()
        entity.removeStatus(this)
        destroy this

