package Status

import initlater BoardEntity
import initlater StatusType
import BoardTrigger
import Tooltip
import Icon

public interface StatusStats extends GeneratesTooltip, HasIcon

public class StatusData
    int duration
    protected int array[10] intData

    construct(int duration)
        this.duration = duration

    static function create() returns StatusData
        return create(0)

    static function create(int duration) returns StatusData
        return new StatusData(duration)

    function setIntData(int where, int value)
        intData[where] = value

    function getIntData(int where) returns int
        return intData[where]

public abstract class Status implements StatusStats
    protected StatusType statusType
    protected BoardEntity entity
    protected BoardTrigger onEndListener

    construct(StatusType statusType, BoardEntity entity)
        this.statusType = statusType
        this.entity = entity

    function addOnEndListener(BoardTrigger listener)
        this.onEndListener = listener

    function getType() returns StatusType
        return statusType

    override function getIcon() returns string
        return statusType.getIcon()

    override function getName() returns string
        return statusType.getName()
    
    function refresh(StatusData data)
        refreshInner(data)
        destroy data

    /** call this only ONCE when you want to purge a buff from a unit that is no longer alive 
        This will ONLY remove ANY visuals this buff might have, it does not unregister any events

        But since you should only call this on a dead stack, it wont trigger anything anyway **/
    abstract function hide()

    abstract function refreshInner(StatusData data)

    override abstract function createTooltip() returns Tooltip

    function kill()
        let me = this
        entity.removeStatus(this)
        if onEndListener != null
            onEndListener.onEvent() -> 
                destroy onEndListener
                onEndListener = null
                destroy me
            
        else
            destroy me

