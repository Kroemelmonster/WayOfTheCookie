package StunDebuff

import AttachmentPoints
import Icons
import Abilities

import Status
import UITooltip

import initlater BoardStack
import initlater StatusType
import BoardTrigger

public class StunDebuff extends Status
    private effect display
    
    private static constant string NAME = "Stun"

    private BoardTrigger turnStartListener

    static function setup() returns StatusType
        let statusType = new StatusType(Icons.bTNStun, NAME)
        statusType.setCreationListener()(BoardStack stack) ->
            return new StunDebuff(statusType, stack)
        statusType.setTooltipListener() (StatusData data) ->
            return createTooltip(data)

        return statusType

    construct(StatusType statusType, BoardStack stack)
        super(statusType, stack)
        display = stack.addAttachEffect(Abilities.stasisTotemTarget, AttachmentPoints.overhead)

        turnStartListener = stack.getTriggers().addTurnStart() (SequenzListener next) ->
            kill()
            next.continue()

    private static function createTooltip(StatusData data) returns Tooltip
        let tooltip = Tooltip.create(NAME)
        tooltip.addLine("You are stuned!")
        // TODO do smth with data
        if data != null
            destroy data
        return tooltip

    override function updateInner(StatusData data)

    override function createCurrentTooltip() returns Tooltip
        return createTooltip(null)

    override function hide()
        if display != null
            display.destr()

    ondestroy
        stack.getTriggers().removeOnTurnStart(turnStartListener)
        if display != null
            display.destr()