package StunDebuff

import AttachmentPoints
import Icons
import Abilities

import Status
import UITooltip

import initlater StatusType
import initlater BoardEntity
import BoardTrigger

public class StunDebuff extends Status
    static StatusType TYPE

    static function setup()
        TYPE = new StatusType("Stunned", Icons.bTNStun)
        TYPE.setCreationListener()(BoardEntity entity) ->
            return new StunDebuff(TYPE, entity)
        TYPE.setTooltipListener() (StatusData data) ->
            return createTooltip(data)

    private static function createTooltip(StatusData data) returns Tooltip
        let tooltip = Tooltip.create(TYPE.getName())
        tooltip.addLine("You are stuned!")
        if data != null
            destroy data
        return tooltip

    /* -------------------------------------------------------------------------- */
    
    private effect display
    private BoardTrigger turnStartListener

    construct(StatusType statusType, BoardEntity entity)
        super(statusType, entity)
        display = entity.addAttachEffect(Abilities.thunderclapTarget, AttachmentPoints.overhead)

        turnStartListener = entity.getTriggers().addTurnStart() (SequenzListener next) ->
            kill()
            next.continue()

    override function updateInner(StatusData data)

    override function createCurrentTooltip() returns Tooltip
        return createTooltip(null)

    override function hide()
        if display != null
            display.destr()

    ondestroy
        if entity.isAlive()
            entity.getTriggers().removeOnTurnStart(turnStartListener)
        hide()