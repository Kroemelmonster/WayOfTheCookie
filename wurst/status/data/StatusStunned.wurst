package StatusStunned

import AttachmentPoints
import Abilities

import Status

import initlater StatusType
import initlater BoardEntity
import BoardTrigger
import Tooltip

init
    Initializer.register(InitializerNames.STATI) -> 
        StatusStunned.setup()


public class StatusStunned extends Status
    static StatusType TYPE

    protected static function setup()
        TYPE = new StatusType("Stunned", Icons.bTNStun)
        TYPE.setCreationListener() (boardEntity, data) ->
            return new StatusStunned(TYPE, boardEntity)
        TYPE.setTooltipListener() data ->
            return createTooltipLines()

    private static function createTooltipLines() returns LinkedList<string>
        let lines = new LinkedList<string>
        ..add("You are stuned!")
        return lines

    /* -------------------------------------------------------------------------- */
    
    private effect display
    private BoardTrigger turnStartListener

    construct(StatusType statusType, BoardEntity entity)
        super(statusType, entity)
        display = entity.addAttachEffect(Abilities.thunderclapTarget, AttachmentPoints.overhead)

        turnStartListener = entity.getTriggers().addTurnStart() (SequenzListener next) ->
            removeWithoutTrigger()
            next.continue()

    override function onRefresh(StatusData data)

    override function canPurge() returns boolean
        return false

    override function createTooltip() returns Tooltip
        return TYPE.createTooltip(null)

    override function hide()
        if display != null
            display.destr()

    ondestroy
        if entity.isAlive()
            entity.getTriggers().removeOnTurnStart(turnStartListener)