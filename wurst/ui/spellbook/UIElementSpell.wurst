package UIElementSpell

import UIElementSpellCost
import Spell
import ClosureFrames
import UIElementInteractbale
import UIHandle
import Action

public class UIElementSpell extends UIElementInteractbale
    static function create(framehandle parent) returns UIElementSpell
        return new UIElementSpell(parent)

    protected framehandle iconHandle
    protected framehandle imgSelectedHandle
    protected framehandle textHandle
    protected UIElementSpellCost array[3] costElements

    protected Spell spell
    
    private construct(framehandle parent)
        super(parent)
        setHeight(0.0585)
        setVisible(false)

        iconHandle = createUIFrame("BACKDROP", self)
        ..setPoint(FRAMEPOINT_TOPLEFT, self, FRAMEPOINT_TOPLEFT, 0.01, -0.008)
        ..setSize(0.036, 0.0335)

        textHandle = createUIFrameByName("ElementSpellText", self, false)
        ..setTextColor(colorA(0, 0, 0, 255))
        ..setPoint(FRAMEPOINT_BOTTOMLEFT, self, FRAMEPOINT_BOTTOMLEFT, 0.01, 0.007)
        ..setPoint(FRAMEPOINT_BOTTOMRIGHT, self, FRAMEPOINT_BOTTOMRIGHT, -0.01, 0.007)
        ..setTextAlignment(TEXT_JUSTIFY_BOTTOM, TEXT_JUSTIFY_LEFT)

        imgSelectedHandle = createUIFrame("BACKDROP", self)
        ..setAllPoints(self)
        ..setAlpha(150)
        ..setTexture("UI/Textures/SelectedSpell.dds")
        ..setVisible(false)

        for int i = 0 to costElements.length - 1
            costElements[i] = UIElementSpellCost.create(self, i)

    function getMainHandle() returns framehandle
        return self

    function getSpell() returns Spell
        return spell

    function setSpell(Spell spell)
        this.spell = spell
        self.setVisible(true)
        textHandle.setText(spell.getName())
        iconHandle.setTexture(spell.getIcon())
        imgSelectedHandle.setVisible(spell.hasOption(ActionOption.PRIMARY))

        // adjust costs
        let cost = spell.getCost()
        costElements[0].update(cost.getAPAsText(), "UI/Textures/Icons/TooltipAddonAPIcon.dds")
        for int i = 1 to costElements.length - 1
            costElements[i].setVisible(false)
        var curIcon = 1
        if cost.hasMana()
            costElements[curIcon].update(cost.getMana().toString(), "UI/Textures/Icons/TooltipAddonManaIcon.dds")
            curIcon++
        if cost.hasCooldown()
            costElements[curIcon].update(cost.getMaxCooldown().toString(), "UI/Textures/Icons/TooltipAddonCooldownIcon.dds")