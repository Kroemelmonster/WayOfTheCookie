package UIWorldConsole

import ClosureFrames

import PlayerData
import UIArmyPanel

import initlater Hero
import initlater MainController
import UIFightResultDialog
import initlater Board
import BoardTrigger
import FightResult

public class UIWorldConsoleInfo
    protected boolean visible = false
    ArmyPanelInfo armyPanel = new ArmyPanelInfo()

public class UIWorldConsole
    static framehandle self
    protected static framehandle pane
    protected static framehandle portrait
    protected static framehandle expBar
    protected static framehandle expBarName

    protected static framehandle goldText
    protected static framehandle leadershipText

    protected static UIFightResultDialog fightResultDialog

    protected static UIArmyPanel armyPanel

    static function setup()
        self = createFrame("MetalBorderBottomlessWindow", GAME_UI, 0, 0)
        ..setSize(0.5, 0.065)
        ..setVisible(false)
        ..setLevel(-1)
        ..setPoint(FRAMEPOINT_BOTTOMLEFT, GAME_UI, FRAMEPOINT_BOTTOMLEFT, 0.0, 0.0)
        pane = getFrame("WindowPane")

        let armyPanelReference = createFrame("FRAME", "ArmyFrame", pane, "", 0)
        ..setPoint(FRAMEPOINT_BOTTOMRIGHT, pane, FRAMEPOINT_BOTTOMRIGHT, 0.0, 0.0)
        ..setPoint(FRAMEPOINT_TOPRIGHT, pane, FRAMEPOINT_TOPRIGHT, 0.0, 0.0)
        
        portrait = getOriginFrame(ORIGIN_FRAME_PORTRAIT, 0)
        ..clearAllPoints()
        ..setHeight(0.049)
        ..setVisible(false)

        createFrame("BUTTON", "", portrait, "", 0)
        ..setPoint(FRAMEPOINT_TOPLEFT, pane, FRAMEPOINT_TOPLEFT, 0.13, 0.0)
        ..setPoint(FRAMEPOINT_BOTTOMRIGHT, pane, FRAMEPOINT_BOTTOMLEFT, 0.18, 0.0)
        ..onClick() ->
            MainController.toggleHeroWindow(GetTriggerPlayerData())


        expBar = createSimpleFrame("MyBarEx", self, 0)
        ..setTexture("Replaceabletextures\\Teamcolor\\Teamcolor03.blp", 0, true)
        ..setWidth(0.29)
        ..setVisible(false)
        ..setPoint(FRAMEPOINT_BOTTOMLEFT, pane, FRAMEPOINT_BOTTOMLEFT, 0.185, -0.01)
        expBarName = getFrame("MyBarExText")

        createFrame("WorldConsoleRessource", pane, 0, 0)
        ..setPoint(FRAMEPOINT_TOPLEFT, pane, FRAMEPOINT_TOPLEFT)
        getFrame("RessourceIcon").setTexture("GoldStack.dds", 0, true)
        goldText = getFrame("RessourceText")

        createFrame("WorldConsoleRessource", pane, 0, 0)
        ..setPoint(FRAMEPOINT_TOPLEFT, pane, FRAMEPOINT_TOPLEFT, 0.04, 0)
        getFrame("RessourceIcon").setTexture("Leadership.dds", 0, true)
        leadershipText = getFrame("RessourceText")
        
        armyPanel = new UIArmyPanel(armyPanelReference)

        fightResultDialog = new UIFightResultDialog()

    static function setupHero(Hero h)
        armyPanel.setupHero(h)
        setVisible(h.getPlayer(), true)

    static function update(Player p)
        if p.worldConsoleInfo.visible == false
            return

        if p.isLocal()
            let realWith  = BlzGetLocalClientWidth()
            let fourToThreeWidth = BlzGetLocalClientHeight() * 4 / 3
            let offsetX = ((realWith - fourToThreeWidth) / 2) / realWith * 0.8
            let multiX = fourToThreeWidth / realWith

            portrait.setAbsPoint(FRAMEPOINT_BOTTOMLEFT, offsetX + multiX  * 0.14, 0.01)
            portrait.setWidth(0.05 * multiX)

            goldText.setText(p.hero.getGold().toString())
            leadershipText.setText(p.hero.getLeadership().toString())

            let lvl = p.hero.getLevel()
            expBarName.setText("Level "+(lvl + 1).toString())
            expBar.setMinMax(0.0, Hero.LEVELS[lvl].toReal())
            expBar.setValue(p.hero.getExp().toReal())

        armyPanel.update(p)

    static function setVisible(Player p, boolean flag)
        if flag == p.worldConsoleInfo.visible
            return 

        if p.isLocal()
            self.setVisible(flag)
            portrait.setVisible(flag)
            expBar.setVisible(flag)
        p.worldConsoleInfo.visible = flag

        if flag == false
            armyPanel.hide(p)

        if flag
            update(p)

    static function showFightResult(Player p, FightResult result, SequenzListener listener)
        fightResultDialog.show(p, result, listener)