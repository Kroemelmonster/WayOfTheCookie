package UIButton

import ClosureFrames

import UI
import PlayerData

import initlater MouseContext
import initlater Action

public enum BorderColor
    RED
    BLUE
    BLACK
    PRIMARY
    NONE

public class ButtonBorder
    private framehandle self

    construct(framehandle ref)
        self = createFrame("BACKDROP", "ButtonBorder", ref, "", 0)
        ..setPoint(FRAMEPOINT_TOPLEFT, ref, FRAMEPOINT_TOPLEFT)
        ..setPoint(FRAMEPOINT_BOTTOMRIGHT, ref, FRAMEPOINT_BOTTOMRIGHT)
        ..setAlpha(125)

    function setVisible(boolean flag)
        self.setVisible(flag)

    function setBorder(BorderColor color)
        switch(color)
            case BorderColor.RED
                self.setAlpha(125)
                self.setTexture("UI/Textures/Button/border-red.blp", 0, true)
            case BorderColor.BLUE
                self.setAlpha(125)
                self.setTexture("UI/Textures/Button/border-blue.blp", 0, true)
            case BorderColor.BLACK
                self.setAlpha(200)
                self.setTexture("UI/Textures/Button/border-black.blp", 0, true)
            case BorderColor.PRIMARY
                self.setAlpha(125)
                self.setTexture("UI/Textures/Button/border-primary.blp", 0, true)
            default
                self.setAlpha(0)

public abstract class UIButton
    framehandle self
    protected framehandle icon

    private FrameHandleListener onMouseEnterListener
    private FrameHandleListener onMouseLeaveListener
    private FrameHandleListener onClickListener
    private FrameHandleListener onMouseDown
    private FrameHandleListener onMouseUp
    
    protected function setup()
        self.onMouseEnter() () ->
            let p = GetTriggerPlayerData()
            p.mouseOverButton = this
            MouseContext.enableMouseMovement(p, false)
            if onMouseEnterListener != null
                onMouseEnterListener.onEvent()
        self.onMouseLeave() () ->
            let p = GetTriggerPlayerData()
            p.mouseOverButton = null
            MouseContext.enableMouseMovement(p, true)
            if onMouseLeaveListener != null
                onMouseLeaveListener.onEvent()
        self.onClick() () ->
            self.setEnabled(false)
            self.setEnabled(true)
            if onClickListener != null
                onClickListener.onEvent()

    function setPoint(framepointtype point, framehandle relative, framepointtype relativePoint, real x, real y)
        self.setPoint(point, relative, relativePoint, x, y)

    function setIcon(string str)
        icon.setTexture(str, 0, true)

    function triggerOnMouseDown()
        if onMouseDown != null
            onMouseDown.onEvent()

    function triggerOnMouseUp()
        if onMouseUp != null
            onMouseUp.onEvent()

    function onClick(FrameHandleListener listener)
        onClickListener = listener

    function onMouseDown(FrameHandleListener listener)
        onMouseDown = listener

    function onMouseUp(FrameHandleListener listener)
        onMouseUp = listener

    function onMouseEnter(FrameHandleListener listener)
        onMouseEnterListener = listener

    function onMouseLeave(FrameHandleListener listener)
        onMouseLeaveListener = listener

    function setVisible(boolean flag)
        self.setVisible(flag)

    function setIconVisible(boolean flag)
        icon.setVisible(flag)

    function setAlpha(int alpha)
        self.setAlpha(alpha)


    ondestroy
        Log.error("Tried to destroy a button... That is currently not implemented...")
        // TODO 
        /*
        if onClickListener != null
            destroy onClickListener
        if onMouseEnterListener != null
            destroy onMouseEnterListener
        if onMouseLeaveListener != null
            destroy onMouseLeaveListener
            */
    
public class UIIconCharge
    private framehandle backdrop
    private framehandle text

    construct(framehandle icon)
        backdrop = createFrame("BackdropWithoutEvents", icon, 0, 0)
        ..setPoint(FRAMEPOINT_TOPLEFT, icon, FRAMEPOINT_CENTER, vec2(0.005, -0.005))
        ..setPoint(FRAMEPOINT_BOTTOMRIGHT, icon, FRAMEPOINT_BOTTOMRIGHT)
        ..setTexture("UI\\Widgets\\Console\\Human\\human-transport-slot.blp", 0, true)

        text = createFrame("TextWithoutEvents", backdrop, 0, 0)
        ..setAllPoints(backdrop)
        ..setTextAlignment(TEXT_JUSTIFY_MIDDLE, TEXT_JUSTIFY_CENTER)

    function setVisible(boolean flag)
        backdrop.setVisible(flag)

    function setText(string str)
        text.setText(str)
            

public class ActionButton extends UIButton
    private framehandle glow
    private framehandle block
    private UIIconCharge charge

    Action action

    override function setIcon(string str)
        icon.setTexture(str, 0, true)


    construct(framehandle parent)
        self = createFrame("Button", parent, 0, 0)
        icon = getFrame("ButtonIcon")

        glow = createFrame("SPRITE", "ButtonGlow", self, "", 0)
        ..setAllPoints(icon)
        ..setModel(UI.heroLevel, 0)

        block = createFrame("BACKDROP", "ButtoBlock", self, "", 0)
        ..setAllPoints(icon)
        ..setVisible(false)

        charge = new UIIconCharge(icon)
        ..setVisible(false)

        setup()
        
    function setAction(Action action, Action currentAction)
        this.action = action
        setVisible(true)
        setIcon(action.getButton())

        if action == currentAction
            enable()
            setGlowVisible(true)
        else
            setGlowVisible(false)
            setCharge(action.getCharge())
            if action.canActivate()
                enable()
            else
                let cooldown = action.getCooldown()
                if cooldown > 0 and action.hasEnoughCharges()
                    disable("BtnBlockCooldown"+cooldown.toString()+".blp")
                else
                    disable("BtnBlockDisabled.blp")

    function setGlowVisible(boolean flag)
        glow.setVisible(flag)

    function disable(string blockingTexture)
        self.setEnabled(false)
        block.setTexture(blockingTexture, 0, true)
        block.setVisible(true)

    function setCharge(int value)
        charge.setVisible(value > 0)
        charge.setText(value.toString())

    function setLevel(int value)
        charge.setVisible(true)
        charge.setText(value.toString())

    function enable()
        self.setEnabled(true)
        block.setVisible(false)

public class CommandButton extends UIButton
    private framehandle highlight
    private framehandle text
    private framehandle goldText
    private ButtonBorder border

    construct(framehandle pane, boolean userControlledHighlight)
        if userControlledHighlight
            self = createFrame("CommandButton", pane, 0, 0)
            icon = getFrame("Icon")
            highlight = createFrame("CommandButtonHighlight", self, 0, 0)
            ..setAllPoints(icon)
            ..setAlpha(200)
            ..setVisible(false)
        else
            self = createFrame("CommandButtonWithHighlight", pane, 0, 0)
            icon = getFrame("Icon")

        setup()

    function setBorder(BorderColor color)
        border.setBorder(color)

    function setText(string str)
        text.setText(str)
    
    function setTextVisible(boolean flag)
        text.setVisible(flag)

    function setEnabled(boolean flag)
        self.setEnabled(flag)

    function setHighlight(boolean flag)
        highlight.setVisible(flag)

    function setGoldText(string str)
        goldText.setText(str)

    function addBorder()
        border = new ButtonBorder(self)

    function setScale(real scale)
        self.setScale(scale)

    function addText(boolean withGold)
        text = createFrame("CommandButtonText", self, 0, 0)
        ..setPoint(FRAMEPOINT_TOPLEFT, self, FRAMEPOINT_BOTTOMLEFT)
        ..setPoint(FRAMEPOINT_TOPRIGHT, self, FRAMEPOINT_BOTTOMRIGHT, -0.002, 0)
        ..setHeight(0.009)
        if withGold
            createFrame("GoldTextSmall", self, 0, 0)
            ..setPoint(FRAMEPOINT_TOPLEFT, text, FRAMEPOINT_BOTTOMLEFT, 0.0, -0.002)
            ..setPoint(FRAMEPOINT_TOPRIGHT, text, FRAMEPOINT_BOTTOMRIGHT, 0.0, -0.002)
            ..setHeight(0.01)
            goldText = getFrame("GoldTextText")
