package UIExtensionArmyPanel

import UIWindow
import Stack
import UIButton
import PlayerData
import initlater Hero
import UIHandle
import UIButtonIcon
import UIDialogSplitStack
import initlater Scheduler
import initlater UIWindowEntity

public class UIExtensionArmyPanelInfo
    protected int startDragMousePressedIndex = -1

    protected Army army = null
    protected int dragStart = -1
    protected ArmyStack stackDragStart
    protected int dragEnd = -1
    protected ArmyStack stackDragEnd

    protected static function get(Player p) returns UIExtensionArmyPanelInfo
        return p.worldConsoleInfo.armyInfo
        // TODO make this cool

    protected function setupDragStart(int i)
        stackDragStart = army.getStack(i)
        if stackDragStart == null
            dragEnd = -1
            stackDragEnd = null
            dragStart = -1
        else
            dragStart = i


    protected function setupDragEnd(int i)
        stackDragEnd = army.getStack(i)
        dragEnd = i

class UIExtensionArmyButton extends UIButtonIcon
    protected framehandle textHandle
    protected int index

    construct(UIHandle parent, int index)
        super(parent.self, true, false, false)
        setSize(0.0413, 0.0413)
        this.index = index

        textHandle = createUIFrame("TEXT", self)
        ..setPoint(FRAMEPOINT_TOPLEFT, self, FRAMEPOINT_BOTTOMLEFT, 0, 0.002)
        ..setPoint(FRAMEPOINT_BOTTOMRIGHT, self, FRAMEPOINT_BOTTOMRIGHT, -0.002, -0.009)
        ..setTextAlignment(TEXT_JUSTIFY_TOP, TEXT_JUSTIFY_RIGHT)

        onClick() ->
            let p = GetTriggerPlayerData()
            // TODO auslagern
            let stack = p.worldConsoleInfo.armyInfo.army.getStack(index)
            if stack != null
                UIWindowEntity.open(p, stack)

        onMouseDown() -> 
            let mouseBtn = BlzGetTriggerPlayerMouseButton()
            if mouseBtn == MOUSE_BUTTON_TYPE_LEFT
                let p = GetTriggerPlayerData()
                let info = p.worldConsoleInfo.armyInfo
                info.setupDragStart(index)
                info.startDragMousePressedIndex = p.mousePressedIndex

        onMouseUp() -> 
            let p = GetTriggerPlayerData()
            let info = p.worldConsoleInfo.armyInfo
            let mouseBtn = BlzGetTriggerPlayerMouseButton()
            if mouseBtn == MOUSE_BUTTON_TYPE_LEFT
                UIExtensionArmyPanel.dragEnd(p)
                info.startDragMousePressedIndex  = -1
            else if mouseBtn == MOUSE_BUTTON_TYPE_RIGHT 
                let stack = info.army.getStack(index)
                if stack != null
                    UIDialogSplitStack.open(p, stack)
            
        onMouseEnter() -> 
            let p = GetTriggerPlayerData()
            let info = p.worldConsoleInfo.armyInfo

            if info.dragStart >= 0
                info.setupDragEnd(index)

    private function setText(string text)
        textHandle.setText(text)
        textHandle.setVisible(true)

    override function disable()
        super.disable()
        textHandle.setVisible(false)
        setIcon("Icons/BTNDotted.dds")
    
    protected function draw(UIExtensionArmyPanelInfo info)
        let stack = info.army.getStack(index)
        setAlpha(255)
        enable()
        // wenn wir auf startDrag sind zeige potentiell endrag an
        if info.dragStart == index
            // zeige das an was auf dragEnd ist an
            if info.stackDragEnd != null
                setIcon(info.stackDragEnd.getStackType().icon)
                setText(info.stackDragEnd.getAmount().toString())
                // sind die nicht identisch wird es ein swap ansonten haben wir gerade einfach nur den normalen status angezeigt
                if info.stackDragEnd != info.stackDragStart
                    setAlpha(80)
            
            else if info.dragEnd > 0
                disable()
        else if info.dragEnd == index
            // zeige das was auf dragStart ist an auÃŸer das sind wir selber
            if info.stackDragStart != info.stackDragEnd
                setIcon(info.stackDragStart.getStackType().icon)
                setText(info.stackDragStart.getAmount().toString())
                setAlpha(80)
        else if stack != null
            // there is not drag but maybe there is astack to show
            setIcon(stack.getStackType().icon)
            setText(stack.getAmount().toString())
        else
            // there is nothing sooo ?
            disable()


public class UIExtensionArmyPanel
    protected static UIExtensionArmyButton array[5] btns
    // protected static UIStackSplitDialog dialogStackSplit

    static function create(UIMenu leftMenu) returns UIMenu
        let element = UIMenu.create(leftMenu)
        ..setPoint(FRAMEPOINT_BOTTOMLEFT, leftMenu, FRAMEPOINT_BOTTOMRIGHT)
        ..setSize(0.258, 0.076)

        UIDialogSplitStack.create()
        
        createUIFrame("BACKDROP", element)
        ..setAllPoints(element)
        ..setTexture("UI/WorldConsole/WorldConsoleArmyPanelBackground.dds")
        
        btns[0] = new UIExtensionArmyButton(element, 0)
        ..setPoint(FRAMEPOINT_BOTTOMLEFT, element, FRAMEPOINT_BOTTOMLEFT, 0.011, 0.007)
        
        for int i = 1 to Army.MAX_SIZE - 1
            btns[i] = new UIExtensionArmyButton(element, i)
            ..setPoint(FRAMEPOINT_LEFT, btns[i - 1], FRAMEPOINT_RIGHT, 0.002, 0)

        Scheduler.onTime() p ->
            if element.isVisible(p)
                update(p)

        element.onHide() p ->
            cancelDrag(p)

        return element

    static function initHero(Hero h)
        let info = h.getPlayer().worldConsoleInfo.armyInfo
        info.army = h.getArmy()

    private static function cancelDrag(Player p)
        let info = p.worldConsoleInfo.armyInfo
        info.setupDragStart(-1)

    private static function update(Player p)
        let info = p.worldConsoleInfo.armyInfo
        // are you currently Dragging ?
        if info.dragStart >= 0
            // mouse stopped or mouseDragINdex is different ?
            if not p.mousePressed or p.mousePressedIndex != info.startDragMousePressedIndex
                // stop any drag
                info.setupDragStart(-1)

        if not p.isLocal()
            return

        for int i = 0 to Army.MAX_SIZE - 1
            btns[i].draw(info)
        
    protected static function dragEnd(Player p)
        let info = p.worldConsoleInfo.armyInfo
        if info.stackDragStart == null
            return
        if info.stackDragEnd == info.stackDragStart
            return

        if info.stackDragEnd != null and info.stackDragEnd.getStackType() == info.stackDragStart.getStackType()
            info.stackDragEnd.setAmount(info.stackDragEnd.getAmount() + info.stackDragStart.getAmount())
            info.army.setStack(info.dragStart, null)
            destroy info.stackDragStart
        else if info.dragEnd >= 0
            info.army.setStack(info.dragStart, info.stackDragEnd)
            info.army.setStack(info.dragEnd, info.stackDragStart)