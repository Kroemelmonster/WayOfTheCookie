package UIMenuWorldConsole

import PlayerData

import initlater Hero
import FightResult
import UIWindow
import UIHandle
import UIProgressBar
import UIExtensionArmyPanel
import initlater Scheduler
import UIWindowNPC

public class UIMenuWorldConsoleInfo
    UIExtensionArmyPanelInfo armyInfo = new UIExtensionArmyPanelInfo()
    UIWindowNPCInfo npcInfo = new UIWindowNPCInfo()

init
    Initializer.register(InitializerNames.UI) -> 
        UIMenuWorldConsole.create()

public class UIMenuWorldConsole
    protected static UIMenu menu

    protected static framehandle portrait
    protected static UIProgressBar expBar
    protected static UIProgressBar manaBar

    //protected static UIFightResultDialog fightResultDialog

    protected static function create()
        menu = UIMenu.create()
        ..setPointToGameUI(FRAMEPOINT_BOTTOMLEFT, FRAMEPOINT_BOTTOMLEFT, 0.02, 0)
        ..setSize(0.142, 0.177)

        let armyExtension = UIExtensionArmyPanel.create(menu)

        createUIFrame("BACKDROP", menu)
        ..setPoint(FRAMEPOINT_TOPLEFT, menu, FRAMEPOINT_TOPLEFT, -0.02, 0.033)
        ..setPoint(FRAMEPOINT_BOTTOMRIGHT, armyExtension, FRAMEPOINT_BOTTOMRIGHT, 0.01, 0)
        ..setTexture("UI/WorldConsole/WorldConsole.dds")
        
        portrait = getOriginFrame(ORIGIN_FRAME_PORTRAIT, 0)
        ..clearAllPoints()
        ..setPoint(FRAMEPOINT_BOTTOMLEFT, GAME_UI, FRAMEPOINT_BOTTOMLEFT)
        ..setHeight(0.103)
        menu.addSimpleFrame(portrait)

        expBar = UIProgressBar.create("WorldConsoleExpBar", menu)
        ..setSize(0.09, 0.014)
        ..setPoint(FRAMEPOINT_BOTTOMLEFT, menu, FRAMEPOINT_BOTTOMLEFT, 0.033, 0.022)

        manaBar = UIProgressBar.create("WorldConsoleManaBar", menu)
        ..setSize(0.09, 0.014)
        ..setPoint(FRAMEPOINT_BOTTOMLEFT, menu, FRAMEPOINT_BOTTOMLEFT, 0.033, 0.0045)
        
        UIWindowNPC.create()

        Scheduler.onTime() p ->
            if menu.isVisible(p)
                update(p)
        

    static function initHero(Hero h)
        UIExtensionArmyPanel.initHero(h)
        show(h.getPlayer())

    static function hide(Player p)
        menu.hide(p)

    static function show(Player p)
        menu.show(p)
        update(p)

    static function showFightResult(Player p, FightResult result, SequenzListener listener)
        // TODO fightResultDialog.show(p, result, listener)

    private static function update(Player p)
        if not p.isLocal()
            return
        let realWith  = BlzGetLocalClientWidth()
        let fourToThreeWidth = BlzGetLocalClientHeight() * 4 / 3
        let offsetX = ((realWith - fourToThreeWidth) / 2) / realWith * 0.8
        let multiX = fourToThreeWidth / realWith

        portrait.setAbsPoint(FRAMEPOINT_BOTTOMLEFT, offsetX + multiX  * 0.052, 0.04)
        portrait.setWidth(0.092 * multiX)

        let hero = p.hero
        let lvl = hero.getLevel()
        expBar.setValue(hero.getExp(), Hero.LEVELS[lvl])
        expBar.setText("Level "+(lvl + 1).toString())

        let mana = hero.stats.getMana()
        let maxMana = hero.stats.maxMana.value()
        manaBar.setValue(mana, maxMana)
        manaBar.setText(mana.toString() + " / "+ maxMana.toString())