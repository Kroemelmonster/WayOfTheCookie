package UIButtonIcon
import UIButton
import UIHandle
import PlayerData

public enum BorderColor
    RED
    GREEN
    BLACK
    NONE

public class UIButtonIcon extends UIButton
    static function create(framehandle parent, boolean automaticHighlight, boolean hasBorder, boolean hasCounter, boolean hasAmount) returns UIButtonIcon
        return new UIButtonIcon(parent, automaticHighlight, hasBorder, hasCounter, hasAmount)
    
    static function create(UIHandle parent, boolean automaticHighlight, boolean hasBorder, boolean hasCounter, boolean hasAmount) returns UIButtonIcon
        return new UIButtonIcon(parent.self, automaticHighlight, hasBorder, hasCounter, hasAmount)


    private framehandle counterFrame
    private framehandle counterTextFrame
    private framehandle blockFrame
    private framehandle borderFrame
    private framehandle highlightFrame
    private framehandle glowFrame
    private framehandle numberBackdrop
    private framehandle amountFrame
    private framehandle amountIconFrame

    construct(framehandle parent, boolean automaticHighlight, boolean hasBorder, boolean hasCounter, boolean hasAmount)
        super(createBasicButtonFrame(automaticHighlight, parent))

        if hasCounter
            counterFrame = createUIFrame("BACKDROP", self)
            ..setPoint(FRAMEPOINT_TOPLEFT, self, FRAMEPOINT_CENTER, 0.005, -0.005)
            ..setPoint(FRAMEPOINT_BOTTOMRIGHT, self, FRAMEPOINT_BOTTOMRIGHT)
            ..setTexture("UI/Widgets/Console/Human/human-transport-slot.blp")
            ..setVisible(false)

            counterTextFrame = createUIFrame("TEXT", counterFrame)
            ..setAllPoints(counterFrame)
            ..setTextAlignment(TEXT_JUSTIFY_MIDDLE, TEXT_JUSTIFY_CENTER)

        blockFrame = createUIFrame("BACKDROP", self)
        ..setAllPoints(self)
        ..setVisible(false)

        if hasBorder
            borderFrame = createUIFrame("BACKDROP", self)
            ..setAllPoints(self)
            setBorder(BorderColor.NONE)

        if not automaticHighlight
            highlightFrame = createUIFrameByName("ButtonHighlight", self, false)
            ..setAllPoints(self)
            ..setAlpha(200)
            ..setVisible(false)

        if hasAmount
            let padding = 0.002
            let numberBackdropHeight = 0.009
            numberBackdrop = createUIFrame("BACKDROP", self)
            ..setPoint(FRAMEPOINT_BOTTOMLEFT, self, FRAMEPOINT_BOTTOMLEFT, padding, padding)
            ..setPoint(FRAMEPOINT_BOTTOMRIGHT, self, FRAMEPOINT_BOTTOMRIGHT, -padding, padding)
            ..setHeight(numberBackdropHeight)
            ..setTexture("UI/Button/BTNExtensionAmountBackground.dds")

            amountFrame = createUIFrame("TEXT", self)
            ..setAllPoints(numberBackdrop)
            ..setTextAlignment(TEXT_JUSTIFY_MIDDLE, TEXT_JUSTIFY_RIGHT)

            let innerIconPadding = 0.0
            amountIconFrame = createUIFrame("BACKDROP", self)
            ..setPoint(FRAMEPOINT_TOPRIGHT, numberBackdrop, FRAMEPOINT_TOPRIGHT, -innerIconPadding, -innerIconPadding)
            ..setPoint(FRAMEPOINT_BOTTOMRIGHT, numberBackdrop, FRAMEPOINT_BOTTOMRIGHT, -innerIconPadding, innerIconPadding)
            ..setWidth(numberBackdropHeight - (innerIconPadding * 2))
            ..setVisible(false)

        glowFrame = createUIFrame("SPRITE", self)
        ..setAllPoints(self)
        ..setModel("ui/feedback/commandbutton/ui-commandbuttonhighlight.mdx", 0)
        ..setVisible(false)

    function setCounter(int amount)
        counterFrame.setVisible(amount > 0)
        counterTextFrame.setText(amount.toString())

    function setAmount(int amount)
        setAmount(amount.toFormatString())

    function setAmount(int amount, int maxAmount)
        setAmount(amount.toFormatString() + " / " + maxAmount.toFormatString())

    private function setAmount(string amount)
        amountFrame.setText(amount)
        amountIconFrame.setVisible(false)

    function setAmountIcon(string icon)
        amountFrame.setText("")
        amountIconFrame.setTexture(icon)
        amountIconFrame.setVisible(true)

    override function enable()
        self.setEnabled(true)
        blockFrame.setVisible(false)
        if numberBackdrop != null
            numberBackdrop.setVisible(true)
        if amountFrame != null
            amountFrame.setVisible(true)

    function disable(string blockingTexture)
        disable()
        blockFrame.setTexture(blockingTexture)
        blockFrame.setVisible(true)

    override function disable()
        self.setEnabled(false)
        blockFrame.setVisible(false)
        if numberBackdrop != null
            numberBackdrop.setVisible(false)
        if amountFrame != null
            amountFrame.setVisible(false)

    override function setSize(real width, real height)
        super.setSize(width, height)
        glowFrame.setScale(width / 0.038)

    function setBorder(BorderColor color)
        switch(color)
            case BorderColor.RED
                borderFrame.setAlpha(125)
                borderFrame.setTexture("UI/Button/BTNExtensionBorderRed.dds")
            case BorderColor.GREEN
                borderFrame.setAlpha(125)
                borderFrame.setTexture("UI/Button/BTNExtensionBorderGreen.dds")
            case BorderColor.BLACK
                borderFrame.setAlpha(200)
                borderFrame.setTexture("UI/Button/BTNExtensionBorderBlack.dds")
            default
                borderFrame.setAlpha(0)

    function setBorderBasedOnPlayerRelationship(PlayerRelationship relationship)
        if relationship == PlayerRelationship.ENEMY
            setBorder(BorderColor.RED)
        else if relationship == PlayerRelationship.NEUTRAL
            setBorder(BorderColor.NONE)
        else
            setBorder(BorderColor.GREEN)

    function showHighlight(boolean flag)
        highlightFrame.setVisible(flag)

    function setGlowVisible(boolean flag)
        glowFrame.setVisible(flag)