package UIInteractableStatInfo

import UIHandle
import UIInteractable
import UITooltip
import PlayerData
import Damage
import Stats

public class UIInteractableStatInfo extends UIInteractable
    static function create(UIHandle parent) returns UIInteractableStatInfo
        return new UIInteractableStatInfo(parent)

    protected framehandle handleIcon
    protected framehandle handleText

    private construct(UIHandle parent)
        super(createUIFrame("MENU", parent, true), true)
        let height = 0.025
        setHeight(height)

        handleIcon = createUIFrame("BACKDROP", self)
        ..setPoint(FRAMEPOINT_LEFT, self, FRAMEPOINT_LEFT)
        ..setSize(height, height)
        handleText = createUIFrame("TEXT", self)
        ..setPoint(FRAMEPOINT_TOPLEFT, handleIcon, FRAMEPOINT_TOPRIGHT, 0.005, 0)
        ..setPoint(FRAMEPOINT_BOTTOMRIGHT, self, FRAMEPOINT_BOTTOMRIGHT)
        ..setTextAlignment(TEXT_JUSTIFY_MIDDLE, TEXT_JUSTIFY_LEFT)

        onMouseLeave() (p) ->
            UITooltip.hide(p)

    function setIcon(string str)
        handleIcon.setTexture(str)

    function setIcon(DamageType damageType)
        switch damageType
            case MAGIC
                handleIcon.setTexture("ICONS/STATDmgMagic.dds")
            case FIRE
                handleIcon.setTexture("ICONS/STATDmgFire.dds")
            case CHAOS
                handleIcon.setTexture("ICONS/STATDmgChaos.dds")
            case COLD
                handleIcon.setTexture("ICONS/STATDmgCold.dds")
            default
                handleIcon.setTexture("ICONS/STATDmgPhysical.dds")

    function setText(string txt)
        handleText.setText(txt)

    function setTextBasedOnStats(IsIntStat stat)
        handleText.setText(stat.getBasis().toString() + KStringUtils.signed(stat.value() - stat.getBasis()))

    function setTextBasedOnStats(IsRealRangeStat stat)
        let basisDmg = stat.getBasis()
        let dmgDifference = stat.value().avg() - basisDmg.avg()
        let roundedBasisDmg = basisDmg.round()
        handleText.setText(roundedBasisDmg.min.toString() + " - " + roundedBasisDmg.max.toString() + KStringUtils.signed(dmgDifference, 1))

    function setTextBasedOnStats(realRange basisDmg, realRange modifiedDmg)
        let dmgDifference = modifiedDmg.avg() - basisDmg.avg()
        let roundedBasisDmg = basisDmg.round()
        handleText.setText(roundedBasisDmg.min.toString() + " - " + roundedBasisDmg.max.toString() + KStringUtils.signed(dmgDifference, 1))