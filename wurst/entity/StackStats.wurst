package StackStats

import StackType
import KUtil
import StackStatsModifier

import initlater Stack

public class StackStats
    private Stack stack
    StackType stackType

    StackStatsModifier attackModi = new StackStatsModifier()
    StackStatsModifier defenceModi = new StackStatsModifier()
    StackStatsModifier damageModi = new StackStatsModifier()
    StackStatsModifier initModi = new StackStatsModifier()
    StackStatsModifier hpModi = new StackStatsModifier()
    StackStatsModifier actionPointModi = new StackStatsModifier()

    int phyisicalResistance = 0
    int magicResistance = 0
    int fireResistance = 0
    int poisonResistance = 0

    construct(Stack stack, StackType stackType)
        this.stackType = stackType
        this.stack = stack

    @inline
    function getInitiative() returns int
        return initModi.get(stackType.initiative).round()

    @inline
    function getMaxActionPoints() returns int
        return actionPointModi.get(stackType.actionPoints).round()

    @inline
    function getMaxHp() returns int
        return hpModi.get(stackType.maxHp).round()

    @inline
    function getDamage() returns realRange
        return damageModi.getRealRange(stackType.damage, getAmount())

    @inline
    function getDamageOne() returns realRange
        return damageModi.getRealRange(stackType.damage, 1)

    @inline
    function getAttackRange() returns intRange
        return stackType.attackRange

    @inline
    function getAttack() returns int
        return attackModi.get(stackType.attack).round()

    @inline
    function getDefence() returns int
        return defenceModi.get(stackType.defence).round()

    @inline
    function getResistance(DamageType dType) returns int
        let basic = stackType.getResistance(dType)
        switch dType
            case MAGIC
                return magicResistance + basic
            case FIRE
                return fireResistance + basic
            case POISON
                return poisonResistance + basic
            default
                return phyisicalResistance + basic

    @inline
    function getAmount() returns int
        return stack.getAmount()

    ondestroy
        destroy attackModi
        destroy defenceModi
        destroy damageModi
        destroy initModi
        destroy actionPointModi
        destroy hpModi