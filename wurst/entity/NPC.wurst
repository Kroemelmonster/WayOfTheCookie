package NPC

import HashMap
import LinkedList

import Stack
import StackType
import UINPCWindow

import initlater Hero

constant HashMap<unit, NPC> map = new HashMap<unit, NPC>

public enum NPCType
    SHOP

public abstract class NPC
    private unit u
    protected NPCType npcType
    protected NPCShopData npcShopData

    construct(unit u)
        this.u = u
        map.put(u, this)

    static function getFromUnit(unit u) returns NPC
        return map.get(u)
    
    function getUnit() returns unit
        return u

    function getType() returns NPCType
        return npcType

    function getShopData() returns NPCShopData
        return npcShopData

    abstract function startInteraction(Hero h)

    abstract function endInteraction(Hero h)

    ondestroy
        map.remove(u)

public class NPCShop extends NPC
    construct(unit u)
        super(u)
        this.npcType = SHOP
        this.npcShopData = new NPCShopData()

    function addStock(StackType stackType, int amount)
        npcShopData.stock.add(new Stack(stackType, amount))

    override function startInteraction(Hero h)
        h.setVulnearble(false)
        UINPCWindow.setupNPC(h.getPlayer(), this)


    override function endInteraction(Hero h)
        h.setVulnearble(true)
        UINPCWindow.hide(h.getPlayer())
    

public class NPCShopData
    protected LinkedList<Stack> stock = new LinkedList<Stack>
    
    function getStock() returns LinkedList<Stack>
        return stock