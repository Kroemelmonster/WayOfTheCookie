package StackType


import StackSoundSet
import DamageAndResistance
import initlater TalentType
import Damage
import Stats

public class Family
    string name

    construct(string name)
        this.name = name

    static Family TROLL = new Family("Troll")
    static Family GNOLL = new Family("Gnoll")
    static Family SKELTON = new Family("Skelton")
    static Family SASQUATCH = new Family("Sasquatch")

    // function getTalents() returns LinkedList<HasIconAndTooltip>

public interface HasEntityStats
    function getIcon() returns string
    function getName() returns string

    function getAttack() returns int
    function getDefence() returns int
    function getInitiative() returns int
    function getBaseDamage() returns realRange
    function getAttackRange() returns intRange
    function getMaxAP() returns int
    function getMaxMoveAP() returns int
    function getMaxHP() returns int
    function getAmount() returns int

    function getDamageMulti(LinkedList<Tag> tags) returns real
    function getStatusEffectivness(LinkedList<Tag> tags) returns real
    function getSummonEffectivness(LinkedList<Tag> tags) returns real
    
    function getLeadership() returns int
    function getDamageType() returns DamageType
    function getResistance() returns Resistance

    function forEachVisibleTalent(LLItrClosure<TalentStats> itr)

public class StackType implements HasEntityStats
    protected int unitId
    protected int armyUnitId
    protected StackSoundSet soundSet
    protected string icon
    protected string name

    protected int level
    protected int leadership
    protected int value
    protected int weight

    protected int initiative
    protected int maxAP
    protected int maxHp
    protected intRange damage
    protected intRange attackRange
    protected int attack
    protected int defence

    protected DamageType damageType = PHYSICAL
    protected Resistance resistance = new Resistance()

    protected LinkedList<TalentType> talents = new LinkedList<TalentType>()

    protected LinkedList<Family> families = new LinkedList<Family>()

/* ---------------------------------- Stats --------------------------------- */

    override function forEachVisibleTalent(LLItrClosure<TalentStats> itr)
        talents.forEach() (TalentType talentType) ->
            if not talentType.isHidden()
                itr.run(talentType)
        destroy itr

    override function getIcon() returns string
        return icon

    override function getName() returns string
        return name

    override function getAttack() returns int
        return attack

    override function getDefence() returns int
        return defence

    override function getBaseDamage() returns realRange
        return damage.toReal()

    override function getAttackRange() returns intRange
        return attackRange

    override function getInitiative() returns int
        return initiative
    
    override function getMaxAP() returns int
        return maxAP

    override function getMaxMoveAP() returns int
        return getMaxAP()
    
    override function getMaxHP() returns int
        return maxHp

    override function getDamageMulti(LinkedList<Tag> tags) returns real
        return 1.0

    override function getStatusEffectivness(LinkedList<Tag> tags) returns real
        return 1.0

    override function getSummonEffectivness(LinkedList<Tag> tags) returns real
        return 1.0

    override function getAmount() returns int
        return 1

    override function getLeadership() returns int
        return leadership

    override function getDamageType() returns DamageType
        return damageType

    override function getResistance() returns Resistance
        return resistance

/* --------------------------------- Getters -------------------------------- */

    function getUnitId() returns int
        return unitId

    function getArmyUnitId() returns int
        return armyUnitId

    function getLevel() returns int
        return level

    function getValue() returns int
        return value

    function getWeight() returns int
        return weight

    function getResistance(DamageType dType) returns int
        return resistance.getRes(dType)

    function isFamily(Family fam) returns boolean
        return families.has(fam)

    function addAllTalentsTo(LinkedList<TalentType> list)
        list.addAll(talents)

/* ---------------------------------- Setup --------------------------------- */

    construct(integer unitId, integer armyUnitId, string icon, StackSoundSet soundSet, string name, int level, int leadership, int value, int weight)
        this.unitId = unitId
        this.armyUnitId = armyUnitId
        this.soundSet = soundSet
        this.icon = icon
        this.name = name
        this.level = level
        this.leadership = leadership
        this.value = value
        this.weight = weight

    function addTalent(TalentType talent)
        talents.add(talent)

    function addFamily(Family fam)
        families.add(fam)
    
    function setMaxHp(int value)
        maxHp = value
    
    function setDamage(intRange value)
        damage = value

    function setAttackRange(intRange value)
        attackRange = value

    function setInitiative(int value)
        initiative = value

    function setMaxAP(int value)
        maxAP = value

    function setAttack(int value)
        attack = value

    function setDefence(int value)
        defence = value

    function addResistanceAgainst(DamageType dType, int value)
        resistance.addRes(dType, value)
    
    function setDamageType(DamageType value)
        this.damageType = value