package NPC

import HashMap

import Stack
import StackType

import initlater Hero
import initlater UIWindowNPC

constant HashMap<unit, NPC> map = new HashMap<unit, NPC>

public enum NPCType
    SHOP

public abstract class NPC
    private unit u
    NPCType typ

    construct(unit u)
        this.u = u
        map.put(u, this)

    static function getFromUnit(unit u) returns NPC
        return map.get(u)
    
    function getUnit() returns unit
        return u

    abstract function startInteraction(Hero h)

    abstract function endInteraction(Hero h)

    ondestroy
        map.remove(u)

public class NPCShop extends NPC
    NPCShopData data

    construct(unit u)
        super(u)
        this.typ = SHOP
        this.data = new NPCShopData()

    function addStock(StackType stackType, int amount)
        data.stock.add(new Stack(stackType, amount))

    override function startInteraction(Hero h)
        h.setVulnearble(false)
        UIWindowNPC.open(h.getPlayer(), this)

    override function endInteraction(Hero h)
        h.setVulnearble(true)
        UIWindowNPC.hide(h.getPlayer())
    

public class NPCShopData
    LinkedList<Stack> stock = new LinkedList<Stack>

    function unitIterator() returns LLIterator<Stack>
        return stock.iterator()