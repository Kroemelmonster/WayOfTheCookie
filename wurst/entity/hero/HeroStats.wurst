package HeroStats

import KUtil
import StatsModifier

import initlater Hero
import initlater HeroType
import Globals
import StackType
import DamageAndResistance

public class HeroStats
    private Hero hero
    HeroType heroType

    protected int mana = 0

    int basicAttack
    int basicDefence
    int basicPower
    int basicWisdom

    DamageType damageType

    StatsModifier attackModi = new StatsModifier()
    StatsModifier defenceModi = new StatsModifier()
    StatsModifier powerModi = new StatsModifier()
    StatsModifier wisdomModi = new StatsModifier()

    StatsModifier damageModi = new StatsModifier()
    protected StatsModifier realAttackModi = new StatsModifier()
    StatsModifier initModi = new StatsModifier()
    StatsModifier actionPointModi = new StatsModifier()
    StatsModifier additionalManaModi = new StatsModifier()

    construct(Hero hero, HeroType heroType)
        this.hero = hero
        this.heroType = heroType
        basicAttack = heroType.attack
        basicDefence = heroType.defence
        basicPower = heroType.power
        basicWisdom = heroType.wisdom
        damageType = heroType.damageType
        
        this.mana = getMaxMana()

    function getInitiative() returns int
        return initModi.get(heroType.initiative).round()

    function getMaxActionPoints() returns int
        return actionPointModi.get(heroType.actionPoints).round()

    function getBasisAttack() returns int
        return basicAttack

    function getBasisDefence() returns int
        return basicDefence

    function getBasisPower() returns int
        return basicPower

    function getBasisWisdom() returns int
        return basicWisdom

    function getBasisInitiative() returns int
        return heroType.initiative

    function getBasisDamage() returns realRange
        realAttackModi.addBonus = 0
        realAttackModi.multi = 100 + (getAttack() * ATTACK_DAMAGE_PER_ATTACK).toInt()
        return realAttackModi.getRealRange(heroType.getDamage(hero.getLevel()), 1)

    function getAttack() returns int
        return attackModi.get(getBasisAttack()).round()

    function getDefence() returns int
        return defenceModi.get(getBasisDefence()).round()

    function getPower() returns int
        return defenceModi.get(getBasisPower()).round()

    function getWisdom() returns int
        return wisdomModi.get(getBasisWisdom()).round()

    function getDamage() returns realRange        
        return damageModi.getRealRange(getBasisDamage(), 1)

    function getAdditionalMana() returns int
        return additionalManaModi.get(0).round()
    
    function getMaxMana() returns int
        return getWisdom() * MANA_PER_WISDOWM + getAdditionalMana()

    function getAttackModifier() returns StatsModifier
        return attackModi

    function getDefenceModifier() returns StatsModifier
        return defenceModi

    function getPowerModifier() returns StatsModifier
        return powerModi

    function getWisdomModifier() returns StatsModifier
        return wisdomModi

    function getDamageModifier() returns StatsModifier
        return damageModi

    function getInitiativeModifier() returns StatsModifier
        return initModi

    function getAPModifier() returns StatsModifier
        return actionPointModi

    function getMana() returns int
        return mana

    function getDamageType() returns DamageType
        return damageType

    ondestroy
        Log.error("tried to destroy herostats ???")