package WorldHeroes
import StackTypesData
import StackType
import PlayerData
import HeroType
import Hero
import HeroTypesDefinition
import SpellType
import KItemTypesData
import KItemType

init
    WorldHeroes.initialize()

class WorldHeroes
    protected static LinkedList<Hero> all = new LinkedList<Hero>

    protected static function create(Player p, HeroType heroType) returns Hero
        let hero = new Hero(p, heroType)
        all.add(hero)
        return hero

    protected static function initialize() 
        Initializer.register(InitializerNames.WORLD_HEROES) -> 
            let somedudes = StackTypes.getFilteredList() (StackType stackType) ->
                return stackType.getLevel() <= 2

            let h = create(playerData[0], HeroTypes.FAR_SEER)
            h.army.addAtFreeWithLeadership(StackTypes.getAllOfLevel(5).getRandom(), GetRandomInt(4000, 6000))
            h.army.addAtFreeWithLeadership(StackTypes.find("Spirit Walker"), GetRandomInt(4000, 6000))
            h.army.addAtFreeWithLeadership(StackTypes.find("Necromancer"), GetRandomInt(1500, 3000))
            h.army.addAtFreeWithLeadership(StackTypes.find("Forest Troll High Priest"), GetRandomInt(1500, 3000))

            KItemTypes.forEach() (KItemType t) ->
                h.inventory.pickup(t.createRandom())
            
            SpellType.forEach() spellType -> 
                h.spellBook.learn(spellType)