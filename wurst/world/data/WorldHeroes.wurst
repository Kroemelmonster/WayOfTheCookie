package WorldHeroes
import StackTypesData
import StackType
import PlayerData
import HeroType
import Hero
import HeroTypesDefinition
import ItemSteelHammer
import ItemSimpleAxe
import SpellType

init
    WorldHeroes.initialize()

class WorldHeroes
    protected static LinkedList<Hero> all = new LinkedList<Hero>

    protected static function create(Player p, HeroType heroType) returns Hero
        let hero = new Hero(p, heroType)
        all.add(hero)
        return hero

    protected static function initialize() 
        Initializer.register(InitializerNames.WORLD_HEROES) -> 
            let somedudes = StackTypes.getFilteredList() (StackType stackType) ->
                return stackType.level <= 2

            let h = create(playerData[0], HeroTypes.FAR_SEER)
            ..addStackWithLeadershipAtFree(StackTypes.find("Forest Troll High Priest"), GetRandomInt(500, 700))
            ..addStackWithLeadershipAtFree(StackTypes.find("Spirit Walker"), GetRandomInt(500, 700))
            ..addStackWithLeadershipAtFree(StackTypes.find("Skeletal Orc"), GetRandomInt(50, 100))
            ..addStackWithLeadershipAtFree(StackTypes.find("Forest Troll Berserker"), GetRandomInt(50, 100))
            ..equiqItemAt(0, ItemSteelHammer.TYPE.createNew())
            ..setBackPackItem(0, ItemSimpleAxe.TYPE.createNew())
            ..setBackPackItem(1, ItemSimpleAxe.TYPE.createNew())

            SpellType.forEach() spellType -> 
                h.learnSpell(spellType)