package DeepCuttingPassive

import PassiveAction
import AttackAnimation
import BoardController
import Damage
import KUtil

import initlater BoardStack
import initlater Cell
import UITooltip
import StackType
import BoardTrigger
import WalkAndAttackAction
import BuffController
import BuffType
import Buff
import DelayAnimation
import AttachmentPoints
import BleedingAilment

public class DeepCuttingPassive extends PassiveAction
    private static constant int DURATION = 2
    private static constant real PERCENTAGE = 0.8

    @inline
    private static function BUFF() returns BuffType
        return BuffTypeSet.BLEEDING

    private static function getDamage(real damage) returns real
        return damage * PERCENTAGE

    construct(BoardStack stack)
        super(stack, "Deep Cutting")

    override function triggerOnStackCreation(BoardStack stack)
        // TODO can this be destroyed ? yes -> you need to delete stuff
        stack.getTriggers().addOnDamageDealt() (BoardStack source, BoardStack target, SpecificDamageInstance specificInstance, SequenzListener next) ->
            if specificInstance.damageInstance.isDot
                next.continue()
            else if specificInstance.damageInstance.sourceType != ATTACK
                next.continue()
            else if specificInstance.damageInstance.damageType != DamageType.PHYISICAL
                next.continue()
            else
                BleedingAilment.flashEffect(target)
                BuffController.addBuff(BUFF(), target, new BuffData(DURATION)
                ..setRealValue(getDamage(specificInstance.damageInstance.dmg)))
                DelayAnimation.create(stack.getBoard(), 0.1) ->
                    next.continue()

            
    static function createTooltip(StackType _sType) returns Tooltip
        let tooltip = Tooltip.create("Deep Cutting")

        ..addLine(Tooltip.stat("Duration", DURATION))
        ..addLine("")
        ..addLine("Every time this unit deals phyisical attack damage it will inflict a Stack of "+Tooltip.secondaryString(BUFF().getName()))
        ..addLine("which deals "+Tooltip.primaryPercent(PERCENTAGE)+ " of the triggering base Damage")
        ..addLine("-----")
        ..addBuffType(BUFF())
        return tooltip
        