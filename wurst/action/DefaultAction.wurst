package DefaultAction


import LinkedList

import Action
import TargetList

import initlater Cell
import initlater BoardStack
import PathFinding
import BoardEntity
import ActionCost
import ActionType

public abstract class DefaultAction extends Action
    protected TargetList targets

    construct(BoardEntity entity, ActionType actionType, ActionCostPreset cost)
        super(entity, actionType, cost)
        presetOption(ActionOption.DEFAULT)

    abstract function getPathing() returns StackPathFinding

    abstract function getTargets(boolean shouldBeAbleToAttackThisTurn) returns LinkedList<BoardStack>

    abstract function caclulatePath(Cell target, Cell preferedCell) returns Cell

    override function onUIMouseEnter()

    override function onUIMouseLeave()

    override function canBeActivatedByKey(string key) returns boolean
        return false

    ondestroy
        if targets != null
            destroy targets