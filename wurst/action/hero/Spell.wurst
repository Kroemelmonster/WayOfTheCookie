package Spell
import Action
import initlater BoardHero
import initlater ChainLightningSpell
import initlater LightningBoltSpell
import initlater RallingCrySpell
import ActionCost

interface SpellCreateListener
    function create(BoardHero boardHero) returns Spell

public class SpellType
    protected string icon
    protected string name
    protected SpellCreateListener listener

    construct(string name, string icon)
        this.icon = icon
        this.name = name
    
    function onCreate(SpellCreateListener listener)
        this.listener = listener

    @inline
    function create(BoardHero boardHero) returns Spell
        return listener.create(boardHero)

    @inline
    function getIcon() returns string
        return icon
    
    @inline
    function getName() returns string
        return name

    @inline
    function toString() returns string
        return "SpellType '"+name+"'"

    static function setup()
        ChainLightningSpell.setup()
        LightningBoltSpell.setup()
        RallingCrySpell.setup()

public abstract class Spell extends Action
    protected BoardHero hero
    protected int level

    construct(BoardHero hero, SpellType spellType, ActionCostPreset cost)
        super(hero, spellType.icon, spellType.name, cost)
        this.hero = hero
        presetOption(ActionOption.SPELL)

    function setLevel(int i)
        if i < 0
            Log.error("Tried to create the Spell "+name+ " with a level of "+i.toString())
        this.level = i

    override function canBeActivatedByKey(string key) returns boolean
        return false