package InstantSpellAction

import PlayerData
import Action

import SpellAction

import initlater Cell
import initlater BoardHero
import ActionCost
import ActionType
import BoardEntity
import initlater SpellType
import Spell

public abstract class InstantSpellAction extends SpellAction

    static function createType(string name, string icon) returns SpellType
        let actionType = new ActionType(name, icon)
        ..enableOption(ActionTypeOption.SPELL)
        ..enableOption(ActionTypeOption.INSTANT)
        return new SpellType(actionType)

    construct(BoardEntity entity, Spell spell)
        super(entity, spell)


    override function getPreviewResultForCell(Cell cell) returns CellResult
        return CellResult.NONE

    override function getHighlightResultForCell(Player p, Cell cell) returns CellResult
        return CellResult.NONE

    override function recalculatePreview()
        return

    override function recalculateHighlight(Player p)
        return

    override function castAt(Cell cell) returns boolean
        return false

    override function activate()
        cast()

    abstract function cast()
        