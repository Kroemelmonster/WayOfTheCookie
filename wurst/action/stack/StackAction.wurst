package StackAction
import Action
import BoardStack
import ActionCost
import BoardEntity
import ActionType
import LinkedList
import KUtil
import StackActionType

public abstract class StackAction extends Action
    protected BoardStack stack
    protected StackActionType actionType

    static function createType(string name, string icon, ActionCostPreset cost) returns StackActionType
        return new StackActionType(name, icon, cost)

    construct(BoardStack stack, StackActionType actionType, StackActionData data)
        super(stack, actionType)
        this.stack = stack
        this.actionType = actionType
        if data.getCost() != null
            cost.setBasic(data.getCost())
        else
            cost.setBasic(actionType.getCost())

    abstract function createBasicTooltipLines() returns LinkedList<string>