package WaitAction

import Action
import InstantStackAction
import Icons

import OrderSystem

import initlater BoardStack
import BoardTrigger
import InitiativeList
import ActionCost
import UITooltip
import Tooltip
import StringUtils
import ActionType
import BoardEntity
import LinkedList

public class WaitAction extends InstantStackAction
    static ActionType TYPE

    static function setup()
        TYPE = new ActionType("Wait", Icons.bTNPatrol)
        TYPE.onCreate() entity -> 
            return new WaitAction(entity)
        TYPE.onCreateTooltipLines() amount -> 
            return createTooltipLines(amount)

    private static function createTooltipLines(int _amount) returns LinkedList<string>
        return new LinkedList<string>
        ..add("Postpones your turn by half your initiative, if you didnt do it this turn already")

    construct(BoardEntity entity)
        super(entity, TYPE, ActionCostPreset.create(0, false))

        
    override function canActivate() returns boolean
        let initiative = stack.getPlayer().playingBoard.getInitiative()
        let isWaiting = initiative.getCurrent().isWaiting()
        return isWaiting == false

    override function activate()
        let board = stack.getPlayer().playingBoard
        board.getInitiative().wait()
        OrderSystem.endOrder(board)

    override function onUIMouseEnter()
        let tt = createBasicTooltip()
        if canActivate()
            // TODO maybe fo this better ? idont know
            let str = StringUtils.primaryString((InitiativeList.intiativeToDisplayTime(stack.stats.getInitiative()) / 2.0).round().toString())
            + " " + StringUtils.secondaryString("timeunits")
            tt.addLine("Postpone the turn by "+str)
        else
            tt.addLine("You cant postpone again")

        UITooltip.display(stack.getPlayer(), tt)


    override function onUIMouseLeave()
        UITooltip.hide(stack.getPlayer())
        
    override function executeForKI(SequenzListenerStatus listener)
        activate()
        listener.continue(0)