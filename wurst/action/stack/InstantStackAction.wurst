package InstantStackAction

import PlayerData
import Cell
import ActionCost
import StackAction
import BoardEntity
import ActionType
import StackActionType
import BoardStack

public abstract class InstantStackAction extends StackAction

    static function createType(string name, string icon, ActionCostPreset cost) returns StackActionType
        return new StackActionType(name, icon, cost)
        ..enableOption(ActionTypeOption.INSTANT)

    construct(BoardStack stack, StackActionType actionType, StackActionData data)
        super(stack, actionType, data)

    override function getPreviewResultForCell(Cell cell) returns CellResult
        return CellResult.NONE

    override function getHighlightResultForCell(Player p, Cell cell) returns CellResult
        return CellResult.NONE

    override function recalculatePreview()
        return

    override function recalculateHighlight(Player p)
        return

    override function sendTargetOrder(Cell cell) returns boolean
        return false

    abstract override function activate()
        